vec <- stsplit(VEC, " ")
vec <- strsplit(VEC, " ")
write(vec, "Euler29listdata.txt")
?write
write(vec, "Euler29listdata.txt", append = TRUE)
save.image("~/Coursera/Euler29data.RData")
source('~/Coursera/maxlength.r')
source('~/Coursera/projecteuler.r')
power(3,42)
power(2,100)
a <- power(2,100)
?gsub
grepl("***", a)
grepl("[0-9]", a)
grepl("[0-9]$", a)
a <- c(a, "I am 123")
grepl("[0-9]$", a)
grepl("[0-9]", a)
grepl("^[0-9]", a)
grepl("[0-9][0-9][0-9]", a)
a <- c(a, "I am 123 is 12")
grepl("[0-9][0-9][0-9]", a)
grepl("[0-9][0-9][0-9]$", a)
gsub("[0-9][0-9][0-9]$", a)
strsplit("[0-9][0-9][0-9]$", a)
strsplit(a,"[0-9][0-9][0-9]$")
a[1]
?strsplit
strsplit(a,"[0-9][0-9][0-9]$")[[1]]
a <- power(2,10)
a
strsplit(a,"[0-9][0-9][0-9]$")
strsplit("a.b.c", "[.]")
strsplit(a,"[0-9][0-9][0-9]")
strsplit(a,"[0-9][0-9][0-9]$")
source('~/Coursera/projecteuler.r')
a <- power(2,15)
a
strsplit(a, [0-9][0-9][0-9]$)
strsplit(a, "[0-9][0-9][0-9]$")
strsplit(a, "[0-9][0-9][0-9]$", fixed = T)
strsplit("32768", "[0-9][0-9][0-9]$")
cha
?cha
is.character("a")
is.character(1)
tolower("A")
?equal
identical("A", "a")
identical("A", "a", "c")
identical("A", "a")
a <- null
a <- NULL
nchar("hello")
substr("hello", 2)
?substr
strsub
str_sub
substr("hello", 2, 5)
substr("hello", 1, 5-3)
substr("hello", 5-3, 5)
substr("hello", 5-4, 5)
substr("hello", 5-2, 5)
source('~/Coursera/maxlength.r')
source('~/Coursera/maxlength.r')
source('~/Coursera/maxlength.r')
putchar("hello", ",")
putChar("hello", ",")
source('~/Coursera/maxlength.r')
putChar("hello", ",")
source('~/Coursera/maxlength.r')
putChar("hello", ",")
putChar("shello", ",")
putChar("tshello", ",")
putChar("tshello", ,)
putChar("tshello", "_")
substr("hello", 1, 3)
source('~/Coursera/maxlength.r')
putChar("tshello", "_")
putChar("tshello", "_", nberD = 4)
putChar("tshello", "_", nberD = 5)
putChar("tshello", "_", nberD = 6)
putChar("tshello", "_", nberD = 7)
source('~/Coursera/maxlength.r')
putChar("tshello", "_", nberD = 7)
putChar("tshello", "_", nberD = 8)
putChar("tshello", "_", nberD = 3)
putChar("tshello", "_", nberD = 3, pos = "be")
putChar("tshello", ",", nberD = 3, pos = "be")
putChar("tshello", ",", nberD = 3, pos = "end")
source('~/Coursera/projecteuler.r')
source('~/Coursera/isprime.r')
isprime(1000000)
1000000-1
log10(123)
2 % 4
2 %% 4
source('~/Coursera/isprime.r')
isprime(987654321)
"1,000,000"
source('~/Coursera/projecteuler.r')
source('~/Coursera/maxlength.r')
putChar("987654321", ",")
987*2
98*2
98*3
98*4
91*2
92*2
92*3
93*2
93*3
94*2
95*2
96*2
97*2
918*2
913*2
914*2
915*2
916*2
917*2
918*2
921*2
922*2
931*2
941*2
951*2
961*2
971*2
981*2
3645*2
972*2
975*2
987*2
927*2
937*2
936*2
946*2
956*2
928*2
924*2
987*2
978*2
9783*2
92*2
92*3
921*2
923*2
924*2
93*2
93*3
931*2
932*2
9213*2
9123*2
9523*2
9423*2
9413*2
9432*2
9342*2
9352*2
9362*2
9367*2
9345*2
9346*2
9246*2
9312*2
9342*2
9356*2
9357*2
9367*2
9368*2
9362*2
9372*2
9352*2
9325*2
945*2
9453*2
9432*2
9472*2
9473*2
923*2
9999*1000
9999*10000
9999*100000
source('~/Coursera/maxlength.r')
a <- as.character(9999*100000)
putChar(a)
source('~/Coursera/maxlength.r')
putChar(a)
9999*2
9999*2 + 9999*100000
gauss
rref
Gaussian
1:3 == 1:3
all(1:3 == 1:3)
all(1:3 == c(1,2,4))
(1:3 == c(1,2,4)
)
source('~/Coursera/Gaussian.R')
Linera_chec(1:3, c(2,4,6))
Linear_chec(1:3, c(2,4,6))
Linear_chec(1:3, c(2,4,3))
Linear_chec(1:3, c(0,0,0))
source('~/Coursera/Gaussian.R')
Linear_chec(1:3, c(0,0,0))
Linear_chec(1:3, c(10,20,30))
matrix(1:10, 5,2)
A = matrix(1:10, 5,2)
A[A!=0]
A[[A!=0]]
A[1,2]
A[1:5,] == 0
nrow(A)
ncol(A)
is.matrix(A)
A[-1,]
A
A[-c(1,3)]
A[-c(1,3),]
source('~/Coursera/Gaussian.R')
Zero_elim(A)
A
A[1,2]
source('~/Coursera/Gaussian.R')
Zero_elim(A)
A[1,]
A[3,]
debugSource('~/Coursera/Gaussian.R')
Zero_elim(A)
runif(12)
?runif
rnorm(10, mean = 10, sd = 3)
rnorm(10, mean = 1, sd = 3)
round(rnorm(10, mean = 1, sd = 3))
A <- matrix(rep(round(rnorm(10, mean = 0, sd = 1)), 10), 10, 10)
A
debugSource('~/Coursera/Gaussian.R')
Zero_elim(A)
source('~/Coursera/Gaussian.R')
Zero_elim(A)
A
source('~/Coursera/Gaussian.R')
Zero_elim(A)
source('~/Coursera/Gaussian.R')
A
?new
C <- matrix(rep(1,100), 10, 10)
C
Zero_elim(C)
source('~/Coursera/Gaussian.R')
Zero_elim(C)
NULL == 1
NULL == NULL
?is.null
source('~/Coursera/Gaussian.R')
C
Zero_elim(C)
source('~/Coursera/Gaussian.R')
source('~/Coursera/Gaussian.R')
pivot
source('~/Coursera/Gaussian.R')
C
Gaussian_rref(C)
source('~/Coursera/Gaussian.R')
Gaussian_rref(C)
?message
source('~/Coursera/Gaussian.R')
Gaussian_rref(C)
source('~/Coursera/Gaussian.R')
Gaussian_rref(C)
source('~/Coursera/Gaussian.R')
source('~/Coursera/Gaussian.R')
Gaussian_rref(C)
A
Gaussian_rref(A)
A <- matrix(round(rnorm(100,mean = 10, sd = 3)), 10, 10)
A
Gaussian_rref(A)
source('~/Coursera/Gaussian.R')
A[10,]
class(A[10,])
C
C[2,] <- rep(0, 10)
C
source('~/Coursera/Gaussian.R')
A
source('~/Coursera/Gaussian.R')
Gaussian_rref(A)
debugSource('~/Coursera/Gaussian.R')
Gaussian_rref(A)
min(A[,1] != 0)
A
min(A[A[,1] != 0])
min(A[A[,1] != 0,1])
debugSource('~/Coursera/Gaussian.R')
Gaussian_rref(A)
c
A
A <- matrix(round(rnorm(25,mean = 10, sd = 3)), 5, 5)
Gaussian_rref(A)
A
debugSource('~/Coursera/Gaussian.R')
Gaussian_rref(A)
Gaussian_rref(A)
View(B)
View(A)
View(B)
source('~/Coursera/Gaussian.R')
Gaussian_rref(A)
A
C <- matrix(round(rnorm(12,mean = 5, sd = 2)), 3, 4)
C
Gaussian_rref(C)
?stop
source('~/Coursera/Gaussian.R')
Gaussian_rref(C)
Gaussian_rref(A)
View(C)
C <- rbind(C, c(4,7,3,4))
source('~/Coursera/Gaussian.R')
C <- rbind(C, c(4,7,3,4))
Gaussian_rref(C)
C <- rbind(C, c(4,7,3,1))
Gaussian_rref(C)
source('~/Coursera/Gaussian.R')
Gaussian_rref(C)
source('~/Coursera/Gaussian.R')
source('~/Coursera/Gaussian.R')
Gaussian_rref(1)
source('~/Coursera/Gaussian.R')
div
C
C[C[1,] == 3]
C[C[1,] == 3][1]
C[C[1,] == 3,][1]
C[1,C[1,] == 3][1]
source('~/Coursera/Gaussian.R')
source('~/Coursera/Gaussian.R')
simp_mat(1)
simp_mat(C)
C
C <- C[1:3,]
C
A <- Gaussian_rref(C)
A
simp_mat(A)
1.5 - .75*7.33 + .66
-10/3
simplify
source('~/Coursera/Gaussian.R')
C
A
Gaussian_rref(C)
Gaussian_rref(C, TRUE)
source('~/Coursera/Gaussian.R')
library(swirl)
swirl()
install_from_swirl("Regression Models")
?rref
library(swirl)
swirl()
plot(child ~ parent, galton)
?jitter
plot(jitter(child,4) ~ parent, galton)
regline <- lm(child ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = "red")
summary(regrline)
source('~/Coursera/Gaussian.R')
A <- matrix(c(0,2,3,5,2,3,7,12,1,5,6,12), nrows = 3, ncol = 4)
?matrix
A <- matrix(c(0,2,3,5,2,3,7,12,1,5,6,12), nrow = 3, ncol = 4, byrow = T)
A
Gaussian_rref(A)
Gaussian_rref(A, simplify = T)
library(swirl)
swirl()
fit <- lm(child ~ parent, dataset = galton)
?lm
fit <- lm(child ~ parent, data = galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
source('~/Coursera/Gaussian.R')
A <- matrix(round(rnorm(25, mean = 5, sd = 3)), 5, 5)
A
Zero_elim(A)
B <- rbind(A, c(6, 1, 5, 4, 1))
Gaussian_rref(A)
source('~/Coursera/Gaussian.R')
Gaussian_rref(A)
Gaussian_rref(B)
source('~/Coursera/Gaussian.R')
B <- cbind(B, c(0,0,0,0,0,0))
B
Gaussian_rref(B)
source('~/Coursera/Gaussian.R')
Gaussian_rref(B)
Gaussian_rref(A)
B <- cbind(B, c(1,2,3,4,5,6,7))
B <- cbind(B, c(1,2,3,4,5,6))
B
Gaussian_rref(B)
Gaussian_rref(B[[1:6]])
Gaussian_rref(B[,1:6)
Gaussian_rref(B[,1:6])
B
Gaussian_rref(B)
Gaussian_rref(B, simplify = T)
A
A <- cbind(A, c(1,2,3,4,5))
Gaussian_rref(A)
source('~/Coursera/Gaussian.R')
Gaussian_rref(A, T)
Gaussian_rref(A)
source('~/Coursera/Gaussian.R')
source('~/Coursera/Gaussian.R')
Gaussian_rref(A)
B <- matrix(c(4,6,4,4,5,7,3,4,3,6,6,4), nrow = 3, ncol = 4)
B
Gaussian_rref(B)
Gaussian_rref(B, T)
source("Gaussian_rm_cols")
source("Gaussian_rm_cols.r")
B <- matrix(c(4,6,4,4,5,7,3,4,3,6,6,4), nrow = 3, ncol = 4)
B
source("Gaussian_rm_cols.r")
Gaussian_rref(B)
Gaussian_rref(B, T)
rm(list = ls())
source('~/Coursera/Gaussian.R')
B <- matrix(c(4,6,4,4,5,7,3,4,3,6,6,4), nrow = 3, ncol = 4)
Gaussian_rref(B, T)
setwd(".")
setwd("GitHub")
x <- 1:123
x<- x - mean(x)
mean(x)
x
x <- 1:123
mean(x)
x <- x - mean(x)
mean(x)
x <- 1:123
mean(x)
sd(x)
z
z <- (x-mean(x))/sd(x)
mean(z)
sd(z)
x
z
which(z==0)
?qnorm
pnorm(1, mean = 62, sd = sd(x))
qnorm(z[1])
pnorm(z[1], mean = 0, 1)
library(swirl)
swirl()
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
est
sqe
lhs - rhs
all.equal(lhs, rhs)
View(galton)
varchild <- var(galton$child)
varChild <- var(galton$child)
varRes <- var(fir$residuals)
varRes <- var(fit$residuals)
varEst(est(ols.slope, ols.ic))
varEst <- (est(ols.slope, ols.ic))
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, sum(varRes,varEst))
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$esiduals)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
setwd("..")
setwd("GitHub/R_Math")
source('~/GitHub/R_Math/Gaussian_rm_cols.R')
A <- matrix(c(1,2,3,4,1,5,6,7,0,4,1,2,1,2,4,9), 4, 4)
A
source('~/GitHub/R_Math/Gaussian_rm_cols.R')
inv_mat(A)
Gaussian_rref_adj(A)
diag(4)
source('~/GitHub/R_Math/Gaussian_rm_cols.R')
A
inv_mat(A)
source('~/GitHub/R_Math/Gaussian_rm_cols.R')
inv_mat(A)
Gaussian_rref_adj(A)
simp_mat(Gaussian_rref_adj(A)$data)
source('~/GitHub/R_Math/Gaussian_rm_cols.R')
inv_mat(A)
source('~/GitHub/R_Math/Gaussian_rm_cols.R')
inv_mat(A)
source('~/GitHub/R_Math/Gaussian_rm_cols.R')
inv_mat(A)
A*inv_mat(A)
A*A
A
A%*%inv_mat(A)
B <- matrix(c(1,1,1,3,4,3,3,3,4), 3, 3)
B
inv_mat(B)
